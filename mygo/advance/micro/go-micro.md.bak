# Micro 构建微服务

## 什么是微服务

​	微服务是一种**软件架构模式**，用来把大而重的应用程序切成许多可管理的独立服务，各服务之间的通信并不受不同语言的协议影响，每个服务只管做好一件事情。

​	它与传统单服务应用不同，传统企业级应用会把所有服务写在一个工程中，通过不同的包封装不同的业务。但是随着系统越来越大，越来越重，维护的成本随之增加，耦合也越来越重，牵一发而动全身，因为所有功能都写在一套代码中。

​	因此，微服务架构的出现成了必然，把传统应用中模块切成各自独立的子系统，彼此之间通过一定的协议栈通信完成业务计算，各子系统各自维护自己的代码、数据库、上线发布等等，彼此影响降到最低。

## 微服务优势

1. **弹性开发更简单** - 团队各自围绕不同的业务需求，自己管理他们的服务。
2. **更易于理解** - 微服务通常要更小些，通常只有数千行代码，基于仅千行，或更少。
3. **更适合频繁更新发布的系统** - 服务可以独立部署、扩展和管理。
4. **增强的容错与隔离** - 彼此隔离以最小化彼此之间发现异常的影响。
5. **执行力更强** - 通过独立的开发、发布、管理微服务，团队可以更快交付业务需求。
6. **可复用的服务与快速原型** - 微服务中由生而来的Unix设计理念，可以允许大家复用现有服务和更快地在它之上构建全新的功能。



# Micro 工具包



## Micro API

**API**本质上就一个服务网关，它具备动态路由、服务发现的能力，以HTTP方式把外界请求映射到本地微服务，以对外提供服务。

通过服务发现，配合内置的命名空间（Namespace）规则，**API**可以把请求url解析映射到匹配该命名空间规则的服务接口。